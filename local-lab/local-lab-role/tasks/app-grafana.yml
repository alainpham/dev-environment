---
- set_fact:
    appname: grafana

- name: Create {{appname}} folders
  become: true
  file:
    path: /home/{{ ansible_user }}/apps/{{appname}}/config/
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'

- name: Copy config {{appname}} config
  copy:
    src: "templates/{{appname}}/config/"
    dest: /home/{{ ansible_user }}/apps/{{appname}}/config/
    mode: '0644'

- name: "Manage {{appname}} container state - {{appstate}} - {{appconfig[appname].ip}}"
  docker_container:
    name: "{{appname}}"
    image: "{{appconfig[appname].image}}"
    state: "{{appstate}}"
    recreate: "{{recreate}}"
    restart_policy: unless-stopped
    container_default_behavior: no_defaults
    detach: true
    user: "1000:1000"
    command: 
    env:
    ports:
    labels: |
      {
        "traefik.http.routers.{{appname}}.entrypoints": "https",
        "traefik.http.routers.{{appname}}.tls": "true"
      }
    volumes:
      - /home/{{ansible_user}}/apps/grafana/config/grafana-datasources.yml:/etc/grafana/provisioning/datasources/grafana-datasources.yml:ro
      - /home/{{ansible_user}}/apps/grafana/config/dashboards:/etc/grafana/provisioning/dashboards:ro
    networks_cli_compatible: yes
    network_mode: primenet
    networks:
      - name: primenet
        ipv4_address: "{{appconfig[appname].ip}}"

- name: Check if server is up
  when: appstate == 'started'
  uri:
    url: "https://{{appname}}.{{ansible_hostname}}.lan/api/health"
    method: GET
    status_code: 200
  register: result
  until: result.status == 200
  retries: 60
  delay: 2

- name: Reset password
  when: appstate == 'started'
  ignore_errors: true
  uri:
    url: "https://{{appname}}.{{ansible_hostname}}.lan/api/user/password"
    user: "admin"
    password: "admin"
    method: PUT
    body: |
      {
        "oldPassword": "admin",
        "newPassword": "password"
      }
    force_basic_auth: yes
    status_code: 200
    headers:
      Content-Type: application/json
      accept: application/json